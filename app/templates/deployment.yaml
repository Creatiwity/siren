apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: "DATABASE_HOST"
              value: {{ include "app.postgresql.fullname" . }}
            - name: "DATABASE_PORT"
              value: "{{ .Values.postgresql.service.port }}"
            - name: "DATABASE_NAME"
              value: {{ .Values.postgresql.postgresqlDatabase }}
            - name: "DATABASE_USER"
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: "DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ include "app.postgresql.fullname" . }}
                  key: "postgresql-password"
            - name: "RUST_LOG"
              value: {{ .Values.rustLog }}
            - name: "SIRENE_ENV"
              value: {{ .Values.sireneEnv }}
            - name: "BASE_URL"
              value: {{ .Values.baseUrl }}
            - name: "TEMP_FOLDER"
              value: "/app/data/temp"
            - name: "FILES_FOLDER"
              value: "/app/data/files"
            - name: "DB_FOLDER"
              value: "/app/data/files"
          livenessProbe:
            httpGet:
              path: /
              port: 3000
          readinessProbe:
            httpGet:
              path: /
              port: 3000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
